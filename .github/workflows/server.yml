# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Server CI

on:
  push:
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'
defaults:
 run:
  working-directory: server

jobs:
  server-lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: mdillon/postgis:9.5
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      
      - run : pwd
      - run : ls
      - name: Use Node.js ${{ inputs.nodeVersion }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ inputs.nodeVersion }}
          always-auth: true
          registry-url: https://registry.npmjs.org
          scope: '@autofleet'
          
        
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install NPM dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{inputs.npmToken}}

      - name: Check Af npm outdated
        run: npm outdated $(npm ls --parseable | grep autofleet | sed 's|.*node_modules/\(.*\)|\1|') || true
        env:
          NODE_AUTH_TOKEN: ${{inputs.npmToken}}

      - name: init
        if: inputs.skipInit != 'true'
        run: npm run init
        env:
          DB_PASSWORD: postgres
          DB_USERNAME: postgres
          DB_NAME: postgres
          DB_HOST: 127.0.0.1

      - run: npm run linter

      - name: coverage
        run: npm run coverage
        env:
          DB_PASSWORD: postgres
          DB_USERNAME: postgres
          DB_NAME: postgres
          DB_HOST: 127.0.0.1
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - run: rm -rf ./coverage
